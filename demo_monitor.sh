#!/bin/bash
# Quick demo of the event monitor

echo "================================================================================================"
echo "MongoTron Event Monitor - Quick Start Guide"
echo "================================================================================================"
echo ""
echo "The event monitor is now configured for Tron Nile Testnet!"
echo ""
echo "Default USDT Contract (Nile Testnet): TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf"
echo ""
echo "================================================================================================"
echo "Basic Usage Examples:"
echo "================================================================================================"
echo ""
echo "1. Monitor USDT on Nile testnet (default):"
echo "   python event_monitor.py"
echo ""
echo "2. Monitor a specific contract:"
echo "   python event_monitor.py --address YOUR_CONTRACT_ADDRESS"
echo ""
echo "3. Monitor with filters (only Transfer events):"
echo "   python event_monitor.py --filters '{\"event_name\": \"Transfer\"}'"
echo ""
echo "4. Connect to different server:"
echo "   python event_monitor.py --url http://staging:8080"
echo ""
echo "5. Show help:"
echo "   python event_monitor.py --help"
echo ""
echo "================================================================================================"
echo "What the monitor does:"
echo "================================================================================================"
echo ""
echo "✅ Creates a subscription for the contract address"
echo "✅ Connects to WebSocket stream for real-time updates"
echo "✅ Displays events as they occur with formatted output"
echo "✅ Decodes Transfer events showing From/To/Amount"
echo "✅ Shows session statistics on exit"
echo "✅ Automatically cleans up on Ctrl+C"
echo ""
echo "================================================================================================"
echo "Example Output:"
echo "================================================================================================"
echo ""
echo "────────────────────────────────────────────────────────────────────────────────────────────────"
echo "🔔 EVENT #1 - Transfer"
echo "────────────────────────────────────────────────────────────────────────────────────────────────"
echo "📍 ID:          evt_abc123def456"
echo "📄 Contract:    TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf"
echo "🔗 TX Hash:     a1b2c3d4e5f6...9876543210"
echo "📦 Block:       12345678"
echo "⏰ Time:        2025-10-05 21:55:15"
echo ""
echo "📋 Topics (3):"
echo "   [0] ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
echo "   [1] 000000000000000000000041sender_address..."
echo "   [2] 000000000000000000000041recipient_address..."
echo ""
echo "💾 Data:"
echo "   0000000000000000000000000000000000000000000000000000000005f5e100"
echo ""
echo "📊 Decoded Transfer:"
echo "   From: TFromAddress123..."
echo "   To:   TToAddress456..."
echo "   Amount: 100.000000 USDT"
echo "────────────────────────────────────────────────────────────────────────────────────────────────"
echo ""
echo "================================================================================================"
echo "Ready to monitor! Start with:"
echo "================================================================================================"
echo ""
echo "  python event_monitor.py"
echo ""
echo "Press Ctrl+C to stop monitoring at any time."
echo ""
