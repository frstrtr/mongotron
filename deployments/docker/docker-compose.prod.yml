version: '3.8'

services:
  mongotron:
    image: mongotron:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - MONGOTRON_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/mongotron
      - TRON_NODE_HOST=tron-node
      - TRON_NODE_PORT=50051
    depends_on:
      - mongodb
      - redis
      - tron-node
    networks:
      - mongotron-network
    volumes:
      - ./configs:/app/configs:ro
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 4GB
          cpus: '2'
        reservations:
          memory: 2GB
          cpus: '1'

  tron-node:
    image: tronprotocol/java-tron:latest
    restart: unless-stopped
    ports:
      - "18888:18888"
      - "50051:50051"
    volumes:
      - tron-data:/data
    command: |
      --witness 
      --seed-node=54.236.37.243:18888 
      --seed-node=52.53.189.99:18888
    networks:
      - mongotron-network

  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: strongpassword
      MONGO_INITDB_DATABASE: mongotron
    volumes:
      - mongodb-data:/data/db
      - ../../scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mongotron-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - mongotron-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - mongotron
    networks:
      - mongotron-network

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - mongotron-network

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ../grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ../grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - mongotron-network

volumes:
  mongodb-data:
  redis-data:
  tron-data:
  prometheus-data:
  grafana-data:

networks:
  mongotron-network:
    driver: bridge
